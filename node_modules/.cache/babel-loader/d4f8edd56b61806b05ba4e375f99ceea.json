{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'OrdersItem',\n\n  data() {\n    return {\n      youhui: 0,\n      creditUse: 0,\n      businessId: this.$route.query.businessId,\n      fromRouter: this.$route.query.fromRouter,\n      orderTypeId: this.$route.query.orderTypeId,\n      business: {},\n      user: {},\n      cartArr: [],\n      deliveryaddress: {},\n      foodlist: this.$route.query.foodlist\n    };\n  },\n\n  created() {\n    this.user = this.$getSessionStorage('user');\n    this.deliveryaddress = this.$getLocalStorage(this.user.userId); //查询当前商家\n\n    axios.post('BusinessController/getBusinessById', this.$qs.stringify({\n      businessId: this.businessId\n    })).then(response => {\n      this.business = response.data;\n    }).catch(error => {\n      console.error(error);\n    }); //查询当前用户在购物车中的当前商家食品列表\n\n    axios.post('CartController/listCart', this.$qs.stringify({\n      userId: this.user.userId,\n      businessId: this.businessId\n    })).then(response => {\n      this.cartArr = response.data;\n    }).catch(error => {\n      console.error(error);\n    });\n  },\n\n  computed: {\n    totalPrice() {\n      let totalPrice = 0;\n\n      for (let cartItem of this.cartArr) {\n        totalPrice += cartItem.food.foodPrice * cartItem.quantity;\n      }\n\n      totalPrice += this.business.deliveryPrice;\n      return totalPrice;\n    }\n\n  },\n  filters: {\n    sexFilter(value) {\n      return value == 1 ? '先生' : '女士';\n    }\n\n  },\n  methods: {\n    select(event) {\n      this.youhui = event / 50;\n    },\n\n    back() {\n      this.$router.push({\n        path: '/businessInfo?businessId=' + this.businessId + '&fromRouter=' + this.fromRouter + '&orderTypeId=' + this.orderTypeId,\n        query: {\n          businessId: this.businessId,\n          fromRouter: this.fromRouter,\n          orderTypeId: this.orderTypeId,\n          foodlist: this.foodlist\n        }\n      });\n    },\n\n    toUserAddress() {\n      this.$router.push({\n        path: '/userAddress',\n        query: {\n          businessId: this.businessId\n        }\n      });\n    },\n\n    toPayment() {\n      if (this.deliveryaddress == null) {\n        alert('请选择送货地址！');\n        return;\n      } //创建订单\n\n\n      axios.post('OrdersController/createOrders', this.$qs.stringify({\n        userId: this.user.userId,\n        businessId: this.businessId,\n        daId: this.deliveryaddress.daId,\n        orderTotal: this.totalPrice\n      })).then(response => {\n        let orderId = response.data;\n        axios.post('CreditController/spendCredit', this.$qs.stringify({\n          userId: this.user.userId,\n          channelId: \"_SPEND_\",\n          eventId: orderId,\n          credit: this.creditUse\n        })).then(response => {\n          let orderId = response.data;\n\n          if (orderId > 0) {\n            this.$router.push({\n              path: '/payment',\n              query: {\n                orderId: orderId\n              }\n            });\n          } else {\n            alert('创建订单失败！');\n          }\n        }).catch(error => {\n          console.error(error);\n        });\n\n        if (orderId > 0) {\n          this.$router.push({\n            path: '/payment',\n            query: {\n              orderId: orderId\n            }\n          });\n        } else {\n          alert('创建订单失败！');\n        }\n      }).catch(error => {\n        console.error(error);\n      });\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAuDA;AACA;EACAA,kBADA;;EAEAC;IACA;MACAC,SADA;MAEAC,YAFA;MAGAC,wCAHA;MAIAC,wCAJA;MAKAC,0CALA;MAMAC,YANA;MAOAC,QAPA;MAQAC,WARA;MASAC,mBATA;MAUAC;IAVA;EAYA,CAfA;;EAgBAC;IACA;IACA,+DAFA,CAIA;;IACAC;MACAT;IADA,IAEAU,IAFA,CAEAC;MACA;IACA,CAJA,EAIAC,KAJA,CAIAC;MACAC;IACA,CANA,EALA,CAaA;;IACAL;MACAM,wBADA;MAEAf;IAFA,IAGAU,IAHA,CAGAC;MACA;IACA,CALA,EAKAC,KALA,CAKAC;MACAC;IACA,CAPA;EAQA,CAtCA;;EAuCAE;IACAC;MACA;;MACA;QACAA;MACA;;MACAA;MACA;IACA;;EARA,CAvCA;EAiDAC;IACAC;MACA;IACA;;EAHA,CAjDA;EAsDAC;IACAC;MACA;IAGA,CALA;;IAMAC;MACA;QACAC,2HADA;QAEAC;UAAAxB;UAAAC;UAAAC;UAAAK;QAAA;MAFA;IAIA,CAXA;;IAYAkB;MACA;QAAAF;QAAAC;UAAAxB;QAAA;MAAA;IACA,CAdA;;IAeA0B;MACA;QACAC;QACA;MACA,CAJA,CAMA;;;MACAlB;QACAM,wBADA;QAEAf,2BAFA;QAGA4B,+BAHA;QAIAC;MAJA,IAKAnB,IALA,CAKAC;QACA;QAEAF;UACAM,wBADA;UAEAe,oBAFA;UAGAC,gBAHA;UAIAC;QAJA,IAKAtB,IALA,CAKAC;UACA;;UACA;YACA;cAAAY;cAAAC;gBAAAS;cAAA;YAAA;UACA,CAFA,MAEA;YACAN;UACA;QACA,CAZA,EAYAf,KAZA,CAYAC;UACAC;QACA,CAdA;;QAkBA;UACA;YAAAS;YAAAC;cAAAS;YAAA;UAAA;QACA,CAFA,MAEA;UACAN;QACA;MACA,CA/BA,EA+BAf,KA/BA,CA+BAC;QACAC;MACA,CAjCA;IAkCA;;EAxDA;AAtDA","names":["name","data","youhui","creditUse","businessId","fromRouter","orderTypeId","business","user","cartArr","deliveryaddress","foodlist","created","axios","then","response","catch","error","console","userId","computed","totalPrice","filters","sexFilter","methods","select","back","path","query","toUserAddress","toPayment","alert","daId","orderTotal","channelId","eventId","credit","orderId"],"sourceRoot":"src/views","sources":["Orders.vue"],"sourcesContent":["<template>\n  <div class=\"wrapper\">\n    <!-- header部分 -->\n    <header>\n            <div style=\"position:absolute;left:2vw;top:2.1vw\" @click=\"back()\">&lt;</div>\n      <p>确认订单</p>\n    </header>\n    <!-- 订单信息部分 -->\n    <body>\n    <div class=\"order-info\">\n      <h5>订单配送至：</h5>\n      <div class=\"order-info-address\" @click=\"toUserAddress\">\n        <p>{{deliveryaddress!=null?deliveryaddress.address:'请选择送货地址'}}</p>\n        <i class=\"fa fa-angle-right\"></i>\n      </div>\n      <p>{{user.userName}}{{user.userSex | sexFilter}} {{user.userId}}</p>\n    </div>\n    <h3>{{business.businessName}}</h3>\n    <!-- 订单明细部分 -->\n    <ul class=\"order-detailed\">\n      <li v-for=\"(item,index) in cartArr\" :key=\"index\">\n        <div class=\"order-detailed-left\">\n          <img :src=\"item.food.foodImg\">\n          <p>{{item.food.foodName}} x {{item.quantity}}</p>\n        </div>\n        <p>&#165;{{item.food.foodPrice*item.quantity}}</p>\n      </li>\n    </ul>\n    <div class=\"order-deliveryfee\">\n      <p>配送费</p>\n      <p>&#165;{{business.deliveryPrice}}</p>\n    </div>\n    <div style=\"display:inline\" >使用积分</div>\n            <Select v-model=\"creditUse\" @on-select=\"select\">\n                <Option value=\"0\">0</Option>\n                <Option value=\"50\">50</Option>\n                <Option value=\"100\">100</Option>\n                <Option value=\"150\">150</Option>\n                <Option value=\"200\">200</Option>\n                <Option value=\"250\">250</Option>\n            </Select>\n    <div style=\"font-size:15px\">优惠{{youhui}}元</div>\n    <!-- 合计部分 -->\n    <div class=\"total\">\n      <div class=\"total-left\">\n        &#165;{{totalPrice}}\n      </div>\n      <div class=\"total-right\" @click=\"toPayment\">\n        去支付\n      </div>\n    </div>\n    </body>\n  </div>\n</template>\n<script>\nimport axios from 'axios'\nexport default{\n  name:'OrdersItem',\n  data(){\n    return {\n      youhui:0,\n      creditUse:0,\n      businessId:this.$route.query.businessId,\n      fromRouter: this.$route.query.fromRouter,\n      orderTypeId: this.$route.query.orderTypeId,\n      business:{},\n      user:{},\n      cartArr:[],\n      deliveryaddress:{},\n      foodlist: this.$route.query.foodlist,\n    }\n  },\n  created() {\n    this.user = this.$getSessionStorage('user');\n    this.deliveryaddress = this.$getLocalStorage(this.user.userId);\n\n    //查询当前商家\n    axios.post('BusinessController/getBusinessById',this.$qs.stringify({\n      businessId:this.businessId\n    })).then(response=>{\n      this.business = response.data;\n    }).catch(error=>{\n      console.error(error);\n    });\n\n    //查询当前用户在购物车中的当前商家食品列表\n    axios.post('CartController/listCart',this.$qs.stringify({\n      userId:this.user.userId,\n      businessId:this.businessId\n    })).then(response=>{\n      this.cartArr = response.data;\n    }).catch(error=>{\n      console.error(error);\n    });\n  },\n  computed:{\n    totalPrice(){\n      let totalPrice = 0;\n      for(let cartItem of this.cartArr){\n        totalPrice += cartItem.food.foodPrice*cartItem.quantity;\n      }\n      totalPrice += this.business.deliveryPrice;\n      return totalPrice;\n    }\n  },\n  filters:{\n    sexFilter(value){\n      return value==1?'先生':'女士';\n    }\n  },\n  methods:{\n    select(event){\n      this.youhui = event/50\n            \n\n    },\n    back(){\n      this.$router.push({\n          path: '/businessInfo?businessId='+this.businessId+'&fromRouter='+this.fromRouter+'&orderTypeId='+this.orderTypeId,\n          query:{businessId:this.businessId,fromRouter:this.fromRouter,orderTypeId: this.orderTypeId,foodlist: this.foodlist,}\n        })\n    },\n    toUserAddress(){\n      this.$router.push({path:'/userAddress',query:{businessId:this.businessId}});\n    },\n    toPayment(){\n      if(this.deliveryaddress==null){\n        alert('请选择送货地址！');\n        return;\n      }\n      \n      //创建订单\n      axios.post('OrdersController/createOrders',this.$qs.stringify({\n        userId:this.user.userId,\n        businessId:this.businessId,\n        daId:this.deliveryaddress.daId,\n        orderTotal:this.totalPrice\n      })).then(response=>{\n        let orderId = response.data;\n\n        axios.post('CreditController/spendCredit',this.$qs.stringify({\n        userId:this.user.userId,\n        channelId:\"_SPEND_\",\n        eventId:orderId,\n        credit:this.creditUse\n      })).then(response=>{\n        let orderId = response.data;\n        if(orderId>0){\n          this.$router.push({path:'/payment',query:{orderId:orderId}});\n        }else{\n          alert('创建订单失败！');\n        }\n      }).catch(error=>{\n        console.error(error);\n      });\n\n\n\n        if(orderId>0){\n          this.$router.push({path:'/payment',query:{orderId:orderId}});\n        }else{\n          alert('创建订单失败！');\n        }\n      }).catch(error=>{\n        console.error(error);\n      });\n    }\n  }\n}\n</script>\n<style scoped>\n/****************** 总容器 ******************/\n.wrapper {\n  width: 100%;\n  height: 100%;\n}\n.wrapper body {\n  animation: 0.7s rowup forwards;\n}\n@keyframes rowup {\n    0% {\n        opacity: 0.4;\n    }\n    100% {\n        opacity: 1;\n    }\n}\n/****************** header部分 ******************/\n.wrapper header {\n  width: 100%;\n  height: 12.1vw;\n    background: linear-gradient(to right, #0097FF, rgb(177, 201, 247));\n  color: #fff;\n  font-size: 4.8vw;\n  position: fixed;\n  left: 0;\n  top: 0;\n  z-index: 1000;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n/****************** 订单信息部分 ******************/\n.wrapper .order-info {\n  /*注意这里，不设置高，靠内容撑开。因为地址有可能折行*/\n  width: 100%;\n  margin-top: 12vw;\n  background: linear-gradient(to right, #0097FF, rgb(177, 201, 247));\n  box-sizing: border-box;\n  padding: 2vw;\n  color: #fff;\n}\n.wrapper .order-info h5 {\n  font-size: 3vw;\n  font-weight: 300;\n}\n.wrapper .order-info .order-info-address {\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  font-weight: 700;\n  user-select: none;\n  cursor: pointer;\n  margin: 1vw 0;\n}\n.wrapper .order-info .order-info-address p {\n  width: 90%;\n  font-size: 5vw;\n}\n.wrapper .order-info .order-info-address i {\n  font-size: 6vw;\n}\n.wrapper .order-info p {\n  font-size: 3vw;\n}\n.wrapper h3 {\n  box-sizing: border-box;\n  padding: 3vw;\n  font-size: 4vw;\n  color: #666;\n  border-bottom: solid 1px #DDD;\n}\n/****************** 订单明细部分 ******************/\n.wrapper .order-detailed {\n  width: 100%;\n}\n.wrapper .order-detailed li {\n  width: 100%;\n  height: 16vw;\n  box-sizing: border-box;\n  padding: 3vw;\n  color: #666;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n.wrapper .order-detailed li .order-detailed-left {\n  display: flex;\n  align-items: center;\n}\n.wrapper .order-detailed li .order-detailed-left img {\n  width: 10vw;\n  height: 10vw;\n}\n.wrapper .order-detailed li .order-detailed-left p {\n  font-size: 3.5vw;\n  margin-left: 3vw;\n}\n.wrapper .order-detailed li p {\n  font-size: 3.5vw;\n}\n.wrapper .order-deliveryfee {\n  width: 100%;\n  height: 16vw;\n  box-sizing: border-box;\n  padding: 3vw;\n  color: #666;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  font-size: 3.5vw;\n}\n/****************** 订单合计部分 ******************/\n.wrapper .total {\n  width: 100%;\n  height: 14vw;\n  position: fixed;\n  left: 0;\n  bottom: 0;\n  display: flex;\n}\n.wrapper .total .total-left {\n  flex: 2;\n  background-color: #505051;\n  color: #fff;\n  font-size: 4.5vw;\n  font-weight: 700;\n  user-select: none;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n.wrapper .total .total-right {\n  flex: 1;\n  background-color: #38CA73;\n  color: #fff;\n  font-size: 4.5vw;\n  font-weight: 700;\n  user-select: none;\n  cursor: pointer;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n</style>"]},"metadata":{},"sourceType":"module"}